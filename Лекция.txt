Системы контроля версий
Протокол SVN, Subversion - устаревший протокол
Протокол GIT - 100% популярный протокол контроля версий
Популярные ресурсы для хранения проектов github, gitlab

Создание проекта в git
git init - в папке с проектом

далее с помощью git status можно отследить появившиеся 
изменения в папке с проектом
Изменения можно зафиксировать следующим образом:
1. Измененные файлы добавляются в commit (git add file)
2. Для commit нужно указать описание (git commit -m "text")
3. Commit фиксируется в истории изменений

Перед работой в git нужно настроить имя пользователя и
его почту с помощью git config 
 --global это установка для всех проектов
git config --global user.name "имя"
git config --global user.email "почта"

git reset --hard идентификатор - сбросить изменения до 
конкретного коммита (можно перейти как в начало, так и в 
конец истории изменений)

git diff - показывает, что было изменено в проекте после
последнего коммита

файл .gitignore содержит названия папок и файлов, которые
нужно исключить из отслеживания

git branch ветка - создать ветку на основе текущего коммита
git checkout ветка - переключиться на другую ветку

ryabchikova@list.ru - сюда надо сбросить какие-то дела (Тимур)

git merge ветка - слияние текущей ветки с указанной
при слиянии возможны конфликты
конфликты бинарных файлов крайне затруднительно "разрешать"
(resolve), поэтому крайне нежелательно отслеживать бинарные файлы (добавлять их в git)
конфликты текстовых файлов должны быть разрешены при слиянии
причем это разрешение конфикта будет оформлено дополнительным
коммитом

git branch -d ветка - удаление ветки

git remote add origin url - добавление удаленного репозитория
url - адрес в интернет, origin это имя, которое можно изменить

git push - отправка коммитов в удаленный репозиторий
перед этим надо назначить основной удаленный репозиторий
git push --set-upstream origin master

git clone url - клонирование удаленного репозитория

git pull - получить последние изменения из удаленного репозитория